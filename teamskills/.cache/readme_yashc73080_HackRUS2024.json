{"readme": "# HackRUS2024\n\n## HOW TO RUN\n```\ncd HackRUS2024  # if not already in the cwd\npython3 flask-project/flask-server.py  # start up the flask server at port 5000\ncd express-project  # navigate to the express project directory\nnode index  # start up the express server at port 3000\n```\n\n## Inspiration\nThe modern-day allure of endlessly scrolling through social media sites inspired us to make this app, which guides the user in an infinite quest for a captivating and compelling read. The members of our group all love reading and derive inspiration from a wide variety of subject areas, many of which are reflected in our app\u2019s vast selection of books. Our project curates a unique and satisfying user experience that is bound to help all users pursue knowledge and leisure. We intend to further education with our project by encouraging more people to enjoy the pleasures of reading. \n\n## What it does\nOur project generates book recommendations, given a list of liked books by the user. By analyzing the genres of the user\u2019s chosen books, a machine learning model recommends books for the user to choose from. This process is continuous, much like Tinder is, so that the user will constantly be suggested new books to read. \n\n## How we built it\nFor the back end, we used a machine learning (ML) algorithm to generate recommendations based on the books a user chooses from a set of 12. We used scikit-learn to use TF-IDF Vectorizer and Nearest Neighbors which allowed us to generate recommendations based on the genre of a chosen book. We then used this to generate sets of 12 new books to output to the user so that the user can then choose to select more books. For the front end, we used HTML, CSS, and JavaScript to create our user interface. We then served our HTML file with Node.js and used a Flask server to integrate our front end and back end using HTTP requests.\n\n## Challenges we ran into\nWe ran into two main challenges as we created our project. The first big challenge we encountered was l"}
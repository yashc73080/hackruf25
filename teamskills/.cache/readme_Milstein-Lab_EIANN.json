{"readme": "# EIANN: A framework for training deep neural networks with E/I cell types and biologically-plausible learning rules\n\n[![DOI](https://img.shields.io/badge/DOI-10.1101/2025.05.22.655599-grey.svg?style=for-the-badge&logo=doi&labelColor=green&logoColor=white)](https://doi.org/10.1101/2025.05.22.655599)\n\nThis repository contains the code described in the following publication:  \nGalloni A.R., Peddada A., Chennawar Y., Milstein A.D. (2025) Cellular and subcellular specialization enables biology-constrained deep learning. [*bioRxiv* 2025.05.22.655599](https://doi.org/10.1101/2025.05.22.655599)\n\n\n\n\n\n## \ud83e\udde0 About\n\nEIANN is a PyTorch-based tool to build and train rate-based biological neural networks, containing multiple layers of recurrently connected Excitatory (E) and Inhibitory (I) cell types.  \n\nWe provide a simple YAML-based configuration file interface for specifying network architecture, training parameters, learning rules, and cell type constraints (such as enforcing Dale's Law on connections between E and I cell types). We support a range of local rate-based learning rules, including Hebbian, and Oja's rule, and dendrite-based learning rules.\n\n\n\n## \ud83d\udcbb Installation\n\nTo use EIANN, clone this GitHub Repository and install the requirements by running the following commands in your terminal:\n\n```\ngit clone https://github.com/Milstein-Lab/EIANN.git\n```\n\n```\nconda create --name eiann python=3.11.9\n```\n```\nconda activate eiann  \n```\n```\npip install -r requirements.txt\n```\n```\npip install -e .\n```\n\n## \u23f1 Using EIANN\n\nThe full documentation for EIANN is available at [https://milstein-lab.github.io/EIANN](https://milstein-lab.github.io/EIANN/).\n\nModels can be created by specifying the model architecture and parameters either in a YAML configuration file or in a Python dictionary.\n\nWe provide example YAML configuration files in the `network_config/examples/` directory. You can run these models in the example jupyter notebooks we provide in the `notebooks/` directory: [`explore_MNI"}